{"version":3,"sources":["listItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","onClick","removeItem","duratio","easing","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","fileredItems","filter","allItems","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAkBeA,MAdf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACxB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACA,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAAMC,SAAU,SAACC,GAAKZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QACxG,+BAAM,mBAAGH,UAAU,iBAAiBU,QAAS,kBAAIf,EAAMgB,WAAWZ,EAAKI,MAAjE,0BAHwBJ,EAAKI,QAO3C,OACI,oCAAM,cAAC,IAAD,CAAUS,QAAS,IAAKC,OAAO,cAA/B,SAA8CjB,QC+D7CkB,E,kDA1Eb,WAAYnB,GAAO,IAAD,8BAChB,cAAMA,IACDoB,MAAM,CACTlB,MAAM,GACNmB,YAAY,CACVX,KAAK,GACLF,IAAI,KAGR,EAAKc,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKP,WAAa,EAAKA,WAAWO,KAAhB,gBAClB,EAAKV,UAAY,EAAKA,UAAUU,KAAf,gBAZD,E,+CAelB,SAAYX,GACVa,KAAKC,SAAS,CACZL,YAAY,CACVX,KAAKE,EAAEE,OAAOL,MACdD,IAAImB,KAAKC,W,qBAKf,SAAQhB,GACNA,EAAEiB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACM,KAAfA,EAAQpB,KAAU,CACnB,IAAMuB,EAAQ,sBAAOR,KAAKL,MAAMlB,OAAlB,CAAyB4B,IACvCL,KAAKC,SAAS,CACZxB,MAAM+B,EACNZ,YAAY,CACVX,KAAK,GACLF,IAAI,S,wBAMZ,SAAWA,GACT,IAAM0B,EAAeT,KAAKL,MAAMlB,MAAMiC,QAAO,SAAA/B,GAAI,OAAEA,EAAKI,MAAMA,KAC9DiB,KAAKC,SAAS,CACZxB,MAAMgC,M,uBAIV,SAAUxB,EAAMF,GACd,IAAM4B,EAAWX,KAAKL,MAAMlB,MAC5BkC,EAASjC,KAAI,SAAAC,GACRA,EAAKI,MAAMA,IACZJ,EAAKM,KAAKA,MAGde,KAAKC,SAAS,CACZxB,MAAMkC,M,oBAIV,WACE,OACE,sBAAK/B,UAAU,MAAf,UACA,iCACE,uBAAME,GAAG,YAAY8B,SAAUZ,KAAKD,QAApC,UACE,uBAAOlB,KAAK,OAAOgC,YAAY,sBAAsB7B,MAAOgB,KAAKL,MAAMC,YAAYX,KAAMC,SAAUc,KAAKH,cACxG,wBAAQhB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWJ,MAAOuB,KAAKL,MAAMlB,MAAOc,WAAYS,KAAKT,WAAYH,UAAWY,KAAKZ,mB,GArErE0B,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36e32599.chunk.js","sourcesContent":["import React  from 'react';\r\nimport './listItem.css';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const listItems = items.map(item=>{\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>\r\n            <input type=\"text\" id={item.key} value={item.text} onChange={(e)=>{props.setUpdate(e.target.value, item.key)}}/>\r\n            <span><i className=\"material-icons\" onClick={()=>props.removeItem(item.key)}>delete</i></span>\r\n            </p>\r\n        </div>\r\n    });\r\n    return(\r\n        <div> <FlipMove duratio={500} easing=\"ease-in-out\">{listItems}</FlipMove></div>\r\n    )\r\n}\r\nexport default ListItems;","import './App.css';\nimport React from 'react';\nimport  ListItems from './listItem.js';\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this); //to avoid TypeError: Cannot read property 'setState' of undefined    handleInput\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text:e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if(newItem.text!==''){\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items:newItems,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    }\n  }\n\n  removeItem(key){\n    const fileredItems = this.state.items.filter(item=>item.key!==key);\n    this.setState({\n      items:fileredItems\n    })\n  }\n\n  setUpdate(text, key){\n    const allItems = this.state.items;\n    allItems.map(item =>{\n      if(item.key===key){\n        item.text=text;\n      }\n  })\n    this.setState({\n      items:allItems\n    })\n  }\n   \n  render(){\n    return (\n      <div className=\"App\">\n      <header>\n        <form id=\"todo-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"Enter your activity\" value={this.state.currentItem.text} onChange={this.handleInput}/>\n          <button type=\"submit\">Add</button>\n        </form>\n      </header>\n      <ListItems items={this.state.items} removeItem={this.removeItem} setUpdate={this.setUpdate}></ListItems>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}